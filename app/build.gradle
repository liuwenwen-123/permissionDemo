plugins {
    id 'com.android.application'
}





import   org.aspectj.tools.ajc.Main
project.android.applicationVariants.all{  variant->
    JavaCompile  javaCompile =variant.javaCompile
    javaCompile.doLast{
        println("执行Aspectj 编译器...")
        String [] args=[
                "-1.7",
//                    aspectj 处理源文件
                "-inpath",javaCompile.destinationDir.toString(),
//                      aspectj  处理完成 后的输出目录
                "-d",javaCompile.destinationDir.toString(),
//                    编译器的classpath aspectj
                "-aspectpath",javaCompile.classpath.asPath,
//                  java 类的 查找路径
                "-classpath",javaCompile.classpath.asPath,
//                    覆盖引导类的 位置 android 中使用的是 jar 不是jdk
                "-bootclasspath",project.android.bootClasspath.join(File.pathSeparator)
        ]
        new  Main().runMain(args,false)
    }

}
android {
    compileSdk 32

    defaultConfig {
        applicationId "com.lww.permisiondemo"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation project(path: ':permision')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

     implementation'org.aspectj:aspectjrt:1.9.2'
}




